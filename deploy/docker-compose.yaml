version: '3.9'

services:
  db:
    image: postgres:13.0-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - pg_data_flask:/var/lib/postgresql/data
    networks:
      - backend_nw

  backend:
    image: ${DOCKER_HUB_USERNAME}/flask_cw_4:latest
    restart: always
    ports:
      - '5000:5000'
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: db
    healthcheck:
      test: curl -sS http://127.0.0.1:5000 || exit 1
      interval: 3s
      timeout: 3s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_nw
      - frontend_nw

  frontend:
    image: painassasin/node_cource_project:latest
    ports:
      - '80:80'
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - frontend_nw

volumes:
  pg_data_flask:

networks:
  backend_nw:
    driver: bridge
  frontend_nw:
    driver: bridge